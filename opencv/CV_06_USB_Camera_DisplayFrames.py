"""
1. 개요
    USB 카메라로부터 입력한 영상을 화면에 출력한다.
    USB 카메라의 화면을 클릭하거나 아무 키나 누르면 종료한다.
    사용한 USB CAM " 라이프캠 HD-3000
        https://www.microsoft.com/accessories/ko-kr/products/webcams/lifecam-hd-3000/t3h-00014

2. 동작
    단계 1: 읽기용의 비디오 객체를 생성한다.
    단계 2: 마우스 버튼을 동작을 모니터링 하기 위해 마우스 콜백 함수를 설치한다.
    단계 3: 3가지 조건에 이상이 없으면 카메라 영상을 화면에 무한 출력한다.

3. 사용된 함수
    cv.VideoCapture(): 비디오 객체(읽기용)를 생성한다.

4. 질문
    1) 화면에 USB 카메라의 영상 출력이 종료되는 3가지 조건은 무엇인가? 그것들은 AND 조건인가?
    2) 오른 쪽 버튼을 누르면 종료하도록 프로그램을 수정하시오.

"""

import cv2
clicked = False

# ========================================================================================================
# 함수 정의: 마우스 동작이 발생(마우스 클릭)하면 호출되는 콜백함수
# 여기서는 마수스 클릭을 감시한다.
# ========================================================================================================

def onMouse(event, x, y, flags, param):
    global clicked
    if event == cv2.EVENT_LBUTTONUP:
        clicked = True


# ========================================================================================================
# 단계 1: 비디오 객체(읽기용)를 생성한다.
# 파일 생성에 사용한 함수와 같음. 파라미터로 파일 이름이 아니라 카메라 번호가 주어어짐.
# ========================================================================================================

cameraCapture = cv2.VideoCapture(0)         # 0은 비디오 입력 장치의 번호이므로 바뀔 수도 있음.
cv2.namedWindow('MyWindow')         # 미리 출력할 창을 생성해 둔다.


# ========================================================================================================
# 단계 2: 마우스 버튼을 동작을 모니터링 하기 위해 마우스 콜백 함수를 설치한다.
# 마우스의 이벤트를 모니터링하는 설정. 마우스 이벤트가 발생하면 설정한 함수가 호출된다.
# ========================================================================================================

cv2.setMouseCallback('MyWindow', onMouse)

# ========================================================================================================
# 단계 3: 3가지 조건에 이상이 없으면 카메라 영상을 화면에 무한 출력한다.
# ========================================================================================================

print ('Showing camera feed. Click any where on window or press any key to stop.')
#success, frame = cameraCapture.read()

success = True
while success and cv2.waitKey(1) == -1 and not clicked:
    success, frame = cameraCapture.read()
    cv2.imshow('MyWindow', frame)

cv2.destroyWindow('MyWindow')
cameraCapture.release()